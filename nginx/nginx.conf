user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log debug;  # Change the log level to debug
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Define a custom log format for more details
    log_format custom_format '$remote_addr - $remote_user [$time_local] "$request" '
                           '$status $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for"';

    proxy_cache_path /tmp levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name chiqko.pp.ua;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name chiqko.pp.ua;

        ssl_certificate /etc/nginx/ssl/fullchain1.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey1.pem;

        # Apply the custom log format to this server block
        access_log /var/log/nginx/access.log custom_format;  # Use the custom log format

        client_max_body_size 4M;

        # Define a location block for /api/v1 to pass to Node.js app
        location /api/ {
            proxy_pass http://node-app:3000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            error_page 413 @error413;
        }

        # Define a location block for all other paths to pass to React app
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
            add_header Cache-Control "public, max-age=900";
            error_page 413 @error413;
        }

        location @error413 {
            add_header Content-Type "application/json" always;
            return 413 '{"error":"Payload too large"}';
        }
    }
}
